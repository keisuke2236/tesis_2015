卒論の目次
* 背景
    * 背景(人工知能とかについて語る)
    * 現在の人工知能の問題点など
    * 各章の説明とか


* 概要
    * 人工知能の会話アルゴリズムを試したい時、入出力も作らなければいけないしすぐに試すことが出来ない
      なので様々な会話アルゴリズムなどを試すことの出来るハブを作成した。
    * 一般的な人工知能の一部を作り、会話アルゴリズムなどを試せるハブであり、人工知能のすべてを試すものではないということを言う
    * Unityからハブに行きDBを使ってUnityへ出力することの全体の流れの説明（システム概要　図など）
    * ３人の分担　共同研究者の紹介

* この人工知能ハブの構成
    * Javaで作られています、mavenはUnityと連携するために使った．

    * 1：入力情報の解析、2：解析結果の保存、3：出力の作成の 3ステップで作られています。

    * 1：入力情報の解析の説明
        * 解析する内容ごとに振り分ける層
        * 会話の分野別に解析知能を割振る層
        * 入力内容を実際に解析する層
        仕組みについては後で別途記述）

    * 2：データベースについての解説
        * 解析結果の保存や保存された情報を出力の作成時に利用するため、Databaseオブジェクト（以下データベース）を作成し、すべてのクラスで共有
        * すべてのクラスの中で情報の保存や解析結果を取得する際に便利に利用できる

    * 3:出力を作成する工程についての説明
        * 基本的には入力の解析の時と同じアルゴリズムで出力を作成するプログラムを選択している
        * 返答は現在相手から入力があった時と一定の時間が経過した時にするようにしている
        * 返答はデータベースに保存された情報を見て，そこから使う情報を引き出して返答を作成する
        * こちらは2層で作られている
            * 会話の分野別にどの返答アルゴリズムを選択するかを決める層
            * 実際に返答内容を作成する層

    * これらの説明した層は簡単に追加することができることの説明．
        * モードの追加は少し大変、Unity側との連携も必要だと記述
        * 各種知能の追加に関しては３行で追加することが可能であり、気軽にアルゴリズムを試すことができることを強調

* 実装(ソースコードを用いて詳しく説明する)
    * 実解析を行うアルゴリズムを選定するための仕組みについて
        * Google検索を用いて情報を集める　apatch.http.なんとかを使ってる
        * Google検索を用いた理由（推測）
        * 検索最適化のための形態素解析　kuromoji使ってるよ
        * 頻出単語表を作るためのWordCount.javaの解説
        * 固有名詞のみを取得（これが付属知能選択における精度の大部分を占めている）
            * どの品詞を用いるとより正しいアルゴリズムを選定できるかの研究
        * スクレイピング結果からどんな会話のジャンルや分野であるかの推定
            * 全く異なる単語のマッチングが可能になりました
        * 推定した分野（ジャンル）から適切な知能が選ばれるようにしている

    * 通信（websocketの実装について)[エンドポイント]
        * 双方向に任意のタイミングで送信することができる
        * 受け取る情報と送る情報の説明
        * json形式でやりとりしていることの説明

    * 1:入力情報解析部分の実装状況
        * 話題推定知能
            * ゲームと料理の知能について少し解説する
        * 感情解析知能
            * 感情解析のアルゴリズムはすごく単純だけど解説したほうが良い
            * 構文解析(LexicalAnalyzer)，感情辞書とのマッチング，情報の保存について書く
        * ログ収集もしてるよって書いておく

    * 2:データベースの実装状況
        * データベースはすべてのクラスで共有されている
        * 情報の保存について
        * 取り出しについて

    * 3:出力内容作成部分の実装状況
    * 以下の2つのモードを実行して，返答用のjsonを作成することの説明をする
        * 会話モードとは、会話を行う際に発言内容を作成するモードである
            * 各種付随知能はそれぞれ、特定の分野と返答アルゴリズムを持っている
                * 例：ゲームの分野知能　アルゴリズムは・・・クッパの作りかた知ってる？の返答アルゴリズムの解説
                    こっちではソースコードを元にちゃんと解説する．
                * 例：料理の分野知能　　アルゴリズムは・・・クッパの倒し方知ってる？の返答アルゴリズムの解説
                    こっちではソースコードを元にちゃんと解説する．

        * 動作選択モード
            * 動作を選択するモードは、Unity上のキャラクターがどんな動作をすればよいかを選択するモードである。
                * 動作を選択するアルゴリズムに分野を選択する際に利用したGoogle検索アルゴリズムを利用して作成した
                * 動作一覧のあるデータベースへの接続
                * 動作一覧の取得とどの動作を実行するかということの選択



* 実行結果
    * Unityの出力画面（画像）とか
    * 実際に会話してみる（画像）
    * 知能を加えて会話してみる（画像）

* 評価
    * 実際に簡単に会話のアルゴリズムを追加し、Unityで実行できたか
    * Googleのアルゴリズムを用いて、どの付属知能が選択されるかを選ぶことの精度はどんなもんだったのか
    * 実際に会話してみてどうか

* 参考文献
    * 意識はどこから生まれたのか（本）
    * あとはURLをひたすら羅列する
    * いろいろ感謝する